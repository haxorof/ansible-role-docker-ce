---
- name: Set version string
  set_fact:
    _docker_version_string: "{{ docker_os_pkg_version_separator[_docker_os_dist] }}{{ docker_version }}"
  when: docker_version != ''

- name: Set packages state to latest
  set_fact:
    _docker_pkg_state: 'latest'
  when: docker_latest_version | bool and docker_version == ''

- name: Filter out packages to match older Docker CE versions
  set_fact:
    _docker_packages:
      - docker-ce
  when:
    - docker_version != ''
    - docker_version is match('17.') or docker_version is match('18.03') or docker_version is match('18.06')

- name: Ensure some kind of compatibility for no longer officially supported distributions since Docker CE 18.09
  set_fact:
    _docker_packages:
      - docker-ce
  when:
    - _docker_packages is not defined
    - (_docker_os_dist == "Debian" and _docker_os_dist_major_version < '9') or
      (_docker_os_dist == "Fedora" and _docker_os_dist_major_version < '27') or
      (_docker_os_dist == "Ubuntu" and _docker_os_dist_major_version < '16')

- name: Ensure Docker CE is installed
  become: true
  package:
    name: "{{ (item is search('docker')) | ternary((item + _docker_version_string | default('')), item) }}"
    state: "{{ _docker_pkg_state | default('present') }}"
  with_items: "{{ _docker_packages | default(docker_packages) }}"
  register: _pkg_result
  until: _pkg_result is succeeded
  notify: restart docker
